开发工具 sublime text
	插件
		EMMET  快速编写HTML&CSS
		DocBlockr  方便产生函数注释/**回车即可
		SidebarEnhancements  侧边栏右键菜单增强工具
		Terminal 调试终端

	tool->New snippet  编写代码片段

nodejs
	运行在服务端的javascript，基于Chrome V8引擎
	var http = require('http')//基本用法
	http.createServer(function(request,response){
		response.writeHead(200,{'Content-Type':'text/plain'});
		response.end('hello world!\n');
	}).listen(8888);

	npm
		包管理工具
		npm install xx  本地安装
		npm install xxx -g  全局安装


Puer   实时编辑刷新的前端服务器
	npm install puer -g 安装
	Usage:	puer [options...]
	Options:
	  -p,--port 	server's listen port, 8000 default
	  -f,--filetype 	fileType to watch(split with '|'), defualt 'js|css|html|xhtml'
	  -d,--dir 	your customer working dir. default current dir
	  -i,--inspect   	start weinre server and debug all puer page
	  -x,--exclude   	exclude file under watching(must be a regexp), default: ''
	  -a,--addon 	your addon's path
	  -t,--target 	proxy url
	     --no-reload   	close  auto-reload feature,(not recommended)
	     --no-launch   	close the auto launch feature
	  -h,--help   	help list

	  通常的使用场景
	  	cd workspace
	  	puer

HTML
	2008年HTML5标准，2014年HTML标准正是颁布，目前已经是HTML5
	文档分为3个部分
		文档声明
			<!DOCTYPE html>
		头部
			<head>
				<meta charset='utf-8'> 放在第一行，title之前，不然可能会乱码
				<meta name="keyword|description" content="xxx"> 描述网页，给搜索引擎查看
				<meta name="viewport" ... 移动端有效
				<link rel="shortcut icon" href="favicon.ico">标签图标，默认根目录图标
		主体
			文档章节标签
				header nav aside article section footer hx(h1--h6),HTML5增加了许多语义标签
			
			a 链接、锚点、email
				target属性  _self(默认) _blank  也可以是iframe的name属性值，这样页面在iframe中打开
				锚点 <a href="#top">回到顶部</a>   <div id="top">......</div>
				email  <a href="mailto:xxx@qq.com,...">联系我们</a>邮箱用','分隔,可以多个,点击会弹出邮件客户端
				telephone  <a href="tel:13954257890">13956267789</a>

			em | strong
				em语义上的强调，strong重要性的强调

			引用
				cite文章名引用(默认斜体)，q段落引用(默认加双引号),blockquote大段引用
					鲁迅先生在<cite>故乡</cite>中写道：<q>世上本没有路。。。</q>

				code pre常常合用，code表示代码引用，pre表示保留原格式
					<pre>
						<code>
							var a = 25;
							console.log(a);
						</code>
					</pre>

			ul ol dl 无序、有序、自定义列表
				<ol type='a' start='2'>....</ol> 更改序号样式和起始值
				<dl>
					<dt>author</dt>   表示项、名称等，只能有一个
					<dd>Mike</dd>	与项或名称对应的值，可以有多个
					<dd>John</dd>
					<dt>Year</dt>
					<dd>2018</dd>
				</dl>
				dt、dd相当于键值对，一键可对应多个值，dl内可以有多个键值对

			资源标签
				img  alt描述，图片加载失败时显示
				iframe 广告等页面嵌入，与当前页面隔离
				<object type="application/x-shockwave-falsh">
					<param name="movie" value="http://pdfReader.swf">
					<param name="flashvars" value="http://book.pdf">
				</object>  <!--引入插件-->
				<embed>引入插件，与object类似
				<video controls="controls" poster="../poster.jpg">
					<source src=".mp4" type="video/mp4">
					<source src=".webm" type="video/webm">
					<source src=".ogg" type="video.ogg">
					<track kind="subtitles" src=".srt" label="English">
					您的浏览器不支持video标签
				</video>
					controls 可以不用值，是否显示控制条
					autoplay 不用值，打开页面是否自动播放
					loop 不用值，是否循环播放
					poster 封面，没有默认第一帧
					source 不用浏览器支持格式不一样，需准备多个？？？
				<audio> 与video类似

				canvas svg 嵌入图表等

				<map> <area>在图片上定位热点区域
				<img src="../.jpg" alt="xx" height="" width="" usemap="#map1">  usemap属性表示使用热点
				<map name="map1"> name属性与img的usemap属性对应
					<area shape="rect" coords="669,75,1075,682" href="http://.." target="_blank">
					...
				</map>

			表格标签
				<table>
				<caption>标题
				<thead>表头
					<tr>表格的一行
						<th>表头单元格
						<td>内容单元格
				<tbody>表体
				<tfoot>尾部
				th td属性
					colspan属性 跨列
					rowspan 跨行

			表单标签
				<form> 
					<fieldset>
						<legend> 内部小标题
							<input>  很多种type
							<select>
								<optgroup label="optname">
									<option>
								<option>
							<label> for属性与input或select等id对应

	实体字符
		参考 http://www.w3school.com.cn/html/html_entities.asp

CSS  Cascading Style Sheet
	@规则
		@media
			做响应式布局使用
		@keyframes
			动画的中间步骤
		@font-face
			引入外部字体

	选择器
		标签，类，id选择器 *通配符 id>class>tagName
		
		属性选择器[]
			input[disabled]{};		input[type=button]{}  input可省略
			[lang|=en]  属性值为en或en-xxx
			[href^="#"] 属性值以#开头，遇到 #.空格 等需要使用引号
			[href$=pdf] 属性值以pdf结尾
			[href*="163.com"]  属性值中包含"163.com"

		伪类选择器
			a:link   a标签，且href中有值
			:hover	鼠标悬停
			a:visited  访问过
			:active  激活，鼠标点击且未释放时

			input:enable	input:disable

			li:first-child{}  :last-child  表示li是它父元素的第一个(最后一个)li子元素，下面的逻辑也是一样
			li:nth-child(even|odd){}  
			li:nth-child(2n|3n+1...){}  3n+1时，n可以取0
			li:nth-last-child(){} 从最后开始数
			li:only-child{}  唯一子元素
			dd:first-of-type{} 第一个该类型子元素
			dd:last-of-type{}
			span:only-of-type{}  该span是其父元素的唯一一个span类型子元素

		伪元素选择器 ::
			::first-letter{}  首字母
			::first-line{}  首行	
			::before{content:"before"}
			::after{content:"after"}  before、after需配合content使用
			::selection{}  选中的效果

		组合选择器
			子元素选择器  >
			后代选择器  空格
			兄弟选择器  	h2+p  仅选择紧接着h2后面的一个p兄弟元素
						h2~p  选择h2后面所有p兄弟元素
	
		选择器分组
			多个选择器并列，用 , 分隔

	CSS继承
		继承的属性
			color,font,text-align,text-indent,list-style...
		非继承属性
			background,border,position

	CSS优先级
		行内>ID>类和伪类>标签和伪元素  权重呈指数级降低
		!important权重最高，超过行内样式，但一般不使用

	文本
		font-size:   2em|200%  父元素的两倍
		font-family: 字体名或字体类别，可以多个
		font-style：normal|italic
		font-weight:normal|bold
		line-weight:normal(1.1~1.2)|<number>|<length>|<percentage>
			number是直接继承，percentage是计算，直接填进去，所以，之后再有对字体大小的修改，对percentage不起作用
		font:合并以上属性，其中font-size，font-family必填
		color:字体颜色

	对齐
		text-align:center|justify|left|right  文字居中或其他样式
		vertical-align:baseline|top|middle|bottom|sub|super...内联元素的样式显示
			如vertical-align：20px; 则是以baseline为基线往上20px
		text-indent:2em em以文字大小为参照  20% 相对容器宽度   -9999px;用于要隐藏文字的场景

	格式处理
		white-space:normal|nowrap|pre|pre-wrap|pre-line 
			pre-wrap常用，用于显示代码

		单词换行
			word-wrap:normal|break-word  单词过长，超过容器宽度，截断显示
			word-break:normal|keep-all|break-all   break-all表示任意文字都可截断
		文字效果
			text-decoration:none|[<length>{2,3}&&<color>?]#
				1px 2px 3px red;分别表示x轴偏移，y轴偏移，模糊半径，阴影颜色，后两项可空
			text-decoration:underline|normal

	高级设置
		文本溢出截断，显示...
			text-overflow:ellipsis;overflow:hidden;white-space:no-wrap;
		cursor:pointer;
		inherit值，强制从父元素继承

	盒模型
		content	padding	border	margin  上右下左
		margin合并现象，与相邻元素合并，最后一个子元素与父元素合并，有合并条件
		margin:0 auto;  水平居中
		边框颜色默认字体颜色

		border-radius
			5px;半径为5px的圆角，4个角
			0px 5px 10px 15px/
			20px 15px 10px 5px;依次对应TRBL四个角，以水平、垂直半径画椭圆角,有一个0px则画不出来，仍是直角
			50%;变成圆形

		overflow:visible|hidden|scroll|auto
			scroll:默认就有滚动条，文字不足也显示滚动条
			auto:内容超出时才显示滚动条

		box-sizing:content-box(默认)|border-box
			默认width、height设置的是content-box

		box-shadow:
			4px 0 0 0 red;分别为水平偏移、垂直偏移、模糊半径、阴影大小、阴影颜色，后三个可省略
			inset 放在最前面，表示内阴影
			阴影不占据空间

		outline:与border类似，但不占据空间
			1px dashed invert;颜色可用invert，表示与字体颜色相反颜色。

	背景
		background-color:#...;rgb();rgba();transparent(default value)
		background-image:url(),url()..可以多张图片
		background-repeat:repeat-x repeat-y no-repeat
		background-position:20% 50%;图片20%，50%的点与容器20%，50%的点重合
							10px 20px;具体位置，sprite用到
		线性渐变|镜像渐变
			linear-gradient()|radial-gradient()   作为background-image的值使用
			repeat-*-gradient()

		background-origin:padding-box(default)|border-box|content-box

		background-clip:背景裁剪
			border-box(default)|padding-box|content-box

		background-size:50% 50%;相对容器的宽高
						cover 尽可能小，但宽高任一项不能小于容器
						contain 尽可能大，但宽高任一项不能大于容器

		background:url(.png) 0 -20px/20px 20px no-repeat;    /前表示position，/后面表示size,可省略

	布局		元素的摆放模式
		display:block|inline|inline-block|none
			block
				块状元素，默认父元素宽度，可以设置宽高，换行显示
				默认block元素：div p h1~h6 ul ol form...
			inline
				行内元素，默认宽度为内容宽度，不可设置宽高，同行显示
				默认inline元素：span a label cite em i img...
			inline-block
				默认内容宽度，可设置宽高，同行显示
				后续inline-block元素，如果宽度超出，会整块换行，与inline不同
				默认inline-block元素:input select button textarea等表单元素
			inline-block兼容问题
				IE8+可行
				IE6 7 只对原inline元素有效
				解决方法
					1.div{display:inline-block;}div{display:inline}
					2.div{display:inline;zoom:1;}
				例：同行导航设置
					.nav{text-align:center}
					.nav ul{display:inline-block !important;*display:inline;zoom:1;margin:0;padding:0}<!--*仅IE识别？-->

		visibility：hidden 只是看不见，依然在，占据原来位置，与display:none不同

		position:static(default)|relative|absolute|fixed
			relative:
				仍在文档流中，相对元素原来位置定位top left等，会显示在其他元素上面，常用作局对定位元素的参照物
			absolute:
				不在文档流中，默认内容宽度，默认处在原位置，但会在上层。
				定位参照物为第一个定位祖先/根元素
				应用：轮播图等
			fixed:
				不在文档流中，默认宽度为内容宽度，默认在原处，参照物为视窗

		top right bottom left z-index 与position配合使用的属性
			同时设置top bottom或left right会拉伸元素
			z-index：默认0，可以为负值，表示定位元素的显示层级


		float:left|right|none(default) 两列布局常用属性
			默认宽度为内容宽度，半脱离文档流，向指定方向一直移动，位置仍受父元素控制
			子元素都设置float，会使父元素没高度
			多个float元素在同一文档流中
			半脱离文档流，对元素，脱离文档流，对内容，在文档流中
			对flex属性讲，float元素在文档流中

		clear:left|right|both both包含left与right
			用在浮动元素后续块级元素中，清除浮动，防止父元素高度收缩
			常用clearfix：
				.clearfix:after{content:'.';display:block;clear:both;height:0;overflow:hidden;visibility:hidden;}
				.clearfix{zoom:1;} //兼容IE低版本

		flex:多列自适应布局
			flex-container:设置display:flex的元素
			flex-item:flex-container内在文档流中的直接子元素，包括float元素
			main-axis:主轴，flex-item的排列方向
			cross-axis:辅轴，与main-axis垂直的方向
			
			flex-direction:
				row(default)|row-reverse|column|column-reverse 行排列还是列排列
			flex-wrap:no-wrap(default)|wrap|wrap-reverse
				元素是否放弃收缩，换行显示
			flex-flow:
				<'flow-direction'>||<'flex-wrap'> 值缩写
			order:<integer> initial 0
				设置flex-item，flex-item的排列顺序
			flex-basis:main-size|<width>
				设置flex-item的初始宽/高，main-axis方向
			flex-grow:<number> initial 0
				设置flex-item，拉伸权重，将空余空间按比例分配
			flex-shrink:<number> initial 0
				设置flex-item，收缩权重，将空余空间按比例分配
			flex:<'flex-grow'>||<'flex-shrink'>||<'flex-basis'>
				值缩写

			flex对齐
				justify-content:flex-start(default)|flex-end|center|space-between|space-around
					设置flex-container，主轴方向的剩余空间如何安排，flex-item的对齐方式
				align-items:flex-start(default)|flex-end|center|baseline|stretch
					设置flex-container，辅轴方向的剩余空间如何安排，flex-item的对齐方式
				align-self:auto(default)|flex-start|flex-end|center|baseline|stretch
					设置flex-item，设置单个flex-item在cross-axis上的对齐方式
				align-content:flex-start(default)|flex-end|center|space-between|space-around|stretch
					设置flex-container，出现多行时，在cross-axis上的剩余空间如何安排

			flex主要用于移动页面开发中。

transform 变形、旋转、缩放、移动
	transform:none|<transform-function>+
		rotate(45deg) | rotate(-60deg) 默认顺时针方向旋转
		translate(x,y)-->translateX() & translateY()
			y可省略，省略表示0
			translate(50px,20%);%相对于物体本身大小
		scale(x,y) --> scaleX() & scaleY() 
			y可省略，省略默认等于x
			scale(1.2) 物体x、y轴放大1.2倍
			scale(1,1.2) x不变，y轴放大1.2倍
		skew(<angle>,<angle>) skewX() & skewY()
			y可省略，省略表示没有
			skewX() y轴向x轴倾斜
			skewY() x轴向y轴倾斜  //向第二象限内倾斜

	transform:translate(50%) rotate(45deg)  //多个结合
	transform:rotate(45deg) translate(50%)  //与上一个结果不一样，因为第二个旋转改变了X轴方向，而translate按照X方向移动
		rotate skew 都会改变坐标轴方向
		scale则会缩放坐标，使得50px这样的移动被放大或缩小

	transform-origin：设置坐标轴位置，即坐标原点的位置，分为x|y|z三个方向
		默认transform-origin:50% 50%

	rotateY(45deg) 沿Y轴旋转，3D旋转，默认没有效果，只是宽度变窄，因为没有透视效果

	perspective:none(default)|<length>  表示人眼局物体距离，越大透视想效果越好
	perspective-origin:透视角度
		50% 50%;正中间，默认
		left bottom;
		50% -800px;

	translate3d()  x y z
		translateZ()  看起来是放大、缩小效果
	scale3d()  x y z
		scaleZ()单独看不出效果，但与translateZ()合用，会放大移动效果
	rotate3d() x y z
		如rotate(1,0,0,45deg),表示按照(1,0,0)与(0,0,0)的连线，旋转45deg

	transform-style:flat(default)|perserve-3d
		transform元素内部是否保留3d空间，默认flat(扁平化)
	backface-visibility:visible(default)|hidden
		旋转后背面元素是否可见

transition & animation 动画
	变形默认没有过渡效果
	transition:
		transition-property:none(default)|all|left|color...需要过渡的属性
		transition-duration:2s 过渡时间
		transition-timing-function:ease(default)|linear|ease-in|ease-out|ease-in-out|cubic-bezier()
										|step|step-start(end)|steps()
			ease:两头快，中间慢
			linear:线性
			ease-in:开头慢，ease-out同
			ease-in-out:同ease，但幅度更大
			cubic-bezier() 自定义运动函数。。。
			step等:跳动效果
		transition-delay:延迟时间

		transition：值缩写
			left 2s ease 1s;color 2s;

	animation:可以设置多个关键帧，可以自动执行
		animation-name:none(default)|...自己设定
		animation-duration:  持续时间
		animation-timing-function:同前
		animation-iteration-count:infinite|<number>
		animation-direction:normal|reverse|alternate(往返)|alternate-reverse(反向往返)
		animation-play-state:paused|running  暂停或播放
		animation-delay:延迟时间
		animation-fill-mode:none|backwards|forwards|both开始和结束时的状态
			backwards:保持开始帧
			forwards：保持结束帧
			both:保持开始、结束帧
			因为元素的开始帧和结束帧可能与CSS样式不同

		animation:值缩写
			abc 2s ease 0s 1 normal none running;
			name duration timing-function delay times direction fillmode palystate

		关键帧定义
			@keyframes abc{
				from{}
				to{}
			}
			@keyframes abc2{
				0%{}
				50%{}
				100%{}
			}
			@keyframes abc3{
				0%,50%,100%{opacity:1;}
				25%,75%{opacity:0}
			}



